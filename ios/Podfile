# Uncomment this line to define a global platform for your project
platform :ios, '12.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug'        => :debug,
  'Debug-dev'    => :debug,
  'Release'      => :release,
  'Release-dev'  => :release,
  'Debug-prod'   => :debug,
  'Release-prod' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  # Firebaseの依存関係を直接指定
  pod 'Firebase', '10.25.0'
  pod 'FirebaseCore', '10.25.0'

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)

    # iOS 18のサポートとARM64シミュレータのサポート
    target.build_configurations.each do |config|
      # BitcodeをOFFに設定
      config.build_settings['ENABLE_BITCODE'] = 'NO'

      # iOS 12のサポートを確保
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'

      # Apple Silicon (ARM64) シミュレータのサポート - 明示的にサポート
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = ''
      config.build_settings['ONLY_ACTIVE_ARCH'] = 'YES'
      config.build_settings['VALID_ARCHS'] = 'arm64 arm64e x86_64'

      # Swift関連の設定
      config.build_settings['SWIFT_VERSION'] = '5.0'
      if config.name.include?('Debug')
        config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-Onone'
      end

      # gRPC関連のエラーを修正
      if target.name.include?('gRPC') || target.name.include?('abseil')
        # 警告をエラーとして扱わない
        config.build_settings['GCC_TREAT_WARNINGS_AS_ERRORS'] = 'NO'
        # 問題のあるコンパイラフラグを削除
        if config.build_settings['OTHER_CFLAGS'].present?
          config.build_settings['OTHER_CFLAGS'] = config.build_settings['OTHER_CFLAGS'].reject { |f| f == '-G' }
        end
      end

      # Firebase関連の設定
      if target.name.include?('Firebase')
        config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
      end

      # Xcode 15/16の新しいビルド設定への対応
      config.build_settings['DEAD_CODE_STRIPPING'] = 'YES'
      config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'

      # アーキテクチャやSDKへのフレームワーク検索パスを設定
      config.build_settings['FRAMEWORK_SEARCH_PATHS'] ||= [
        '$(inherited)',
        '${PODS_ROOT}/**',
        '${PODS_XCFRAMEWORKS_BUILD_DIR}/**'
      ]

      # ヘッダー検索パスの設定
      config.build_settings['HEADER_SEARCH_PATHS'] ||= [
        '$(inherited)',
        '${PODS_ROOT}/**'
      ]
    end
  end
end
